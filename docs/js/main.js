!function(e){var t={};function s(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(r,n,function(t){return e[t]}.bind(null,n));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=3)}([function(e,t,s){var r={corePath:"https://cdn.jsdelivr.net/gh/naptha/tesseract.js-core@0.1.0/index.js",langPath:"https://tessdata.projectnaptha.com/3.02/"},n=s(1).version;r.workerPath="https://cdn.jsdelivr.net/gh/naptha/tesseract.js@"+n+"/dist/worker.js",t.defaultOptions=r,t.spawnWorker=function(e,t){if(window.Blob&&window.URL)var s=new Blob(['importScripts("'+t.workerPath+'");']),r=new Worker(window.URL.createObjectURL(s));else r=new Worker(t.workerPath);return r.onmessage=function(t){var s=t.data;e._recv(s)},r},t.terminateWorker=function(e){e.worker.terminate()},t.sendPacket=function(e,t){!function e(t,s){if("string"==typeof t){if(/^\#/.test(t))return e(document.querySelector(t),s);if(/(blob|data)\:/.test(t)){var r=new Image;return r.src=t,void(r.onload=(t=>e(r,s)))}var n=new XMLHttpRequest;return n.open("GET",t,!0),n.responseType="blob",n.onload=(t=>e(n.response,s)),n.onerror=function(r){/^https?:\/\//.test(t)&&!/^https:\/\/crossorigin.me/.test(t)&&(console.debug("Attempting to load image with CORS proxy"),e("https://crossorigin.me/"+t,s))},void n.send(null)}if(t instanceof File){var o=new FileReader;return o.onload=(t=>e(o.result,s)),void o.readAsDataURL(t)}if(t instanceof Blob)return e(URL.createObjectURL(t),s);if(t.getContext)return e(t.getContext("2d"),s);if("IMG"==t.tagName||"VIDEO"==t.tagName){var i=document.createElement("canvas");i.width=t.naturalWidth||t.videoWidth,i.height=t.naturalHeight||t.videoHeight;var a=i.getContext("2d");return a.drawImage(t,0,0),e(a,s)}if(t.getImageData){var c=t.getImageData(0,0,t.canvas.width,t.canvas.height);return e(c,s)}return s(t);throw new Error("Missing return in loadImage cascade")}(t.payload.image,function(s){t.payload.image=s,e.worker.postMessage(t)})}},function(e){e.exports={_from:"tesseract.js@^1.0.14",_id:"tesseract.js@1.0.14",_inBundle:!1,_integrity:"sha512-1RG7daAivpuxm3wTdoGI1/fhdXaD+yW9Oo062S2rH3aD3OdA2BO6EOon3RfkUc2heojSRuVGxU5IwjBSjI8TJQ==",_location:"/tesseract.js",_phantomChildren:{},_requested:{type:"range",registry:!0,raw:"tesseract.js@^1.0.14",name:"tesseract.js",escapedName:"tesseract.js",rawSpec:"^1.0.14",saveSpec:null,fetchSpec:"^1.0.14"},_requiredBy:["#USER","/"],_resolved:"https://registry.npmjs.org/tesseract.js/-/tesseract.js-1.0.14.tgz",_shasum:"2548eedb7468e2ddc9260e17d1a84fe4ec7ccba3",_spec:"tesseract.js@^1.0.14",_where:"/Users/sensei/WebstormProjects/OmniBank",author:"",browser:{"./src/node/index.js":"./src/browser/index.js"},bugs:{url:"https://github.com/naptha/tesseract.js/issues"},bundleDependencies:!1,dependencies:{"file-type":"^3.8.0","is-url":"1.2.2","isomorphic-fetch":"^2.2.1","jpeg-js":"^0.2.0","level-js":"^2.2.4","node-fetch":"^1.6.3","object-assign":"^4.1.0","png.js":"^0.2.1","tesseract.js-core":"^1.0.2"},deprecated:!1,description:"Pure Javascript Multilingual OCR",devDependencies:{"babel-preset-es2015":"^6.16.0",babelify:"^7.3.0",browserify:"^13.1.0",concurrently:"^3.1.0",envify:"^3.4.1","http-server":"^0.9.0",pako:"^1.0.3","uglify-js":"^3.4.9",watchify:"^3.7.0"},homepage:"https://github.com/naptha/tesseract.js",license:"Apache-2.0",main:"src/index.js",name:"tesseract.js",repository:{type:"git",url:"git+https://github.com/naptha/tesseract.js.git"},scripts:{build:"browserify src/index.js -t [ babelify --presets [ es2015 ] ] -o dist/tesseract.js --standalone Tesseract && browserify src/browser/worker.js -t [ babelify --presets [ es2015 ] ] -o dist/worker.js && uglifyjs dist/tesseract.js --source-map -o dist/tesseract.min.js && uglifyjs dist/worker.js --source-map -o dist/worker.min.js",release:"npm run build && git commit -am 'new release' && git push && git tag `jq -r '.version' package.json` && git push origin --tags && npm publish",start:'concurrently --kill-others "watchify src/index.js  -t [ envify --NODE_ENV development ] -t [ babelify --presets [ es2015 ] ] -o dist/tesseract.dev.js --standalone Tesseract" "watchify src/browser/worker.js  -t [ envify --NODE_ENV development ] -t [ babelify --presets [ es2015 ] ] -o dist/worker.dev.js" "http-server -p 7355"'},version:"1.0.14"}},function(e,t,s){const r=s(0),n=s(4),o=s(5),i=s(1).version,a=function(e={}){var t=new c(Object.assign({},r.defaultOptions,e));return t.create=a,t.version=i,t};class c{constructor(e){this.worker=null,this.workerOptions=e,this._currentJob=null,this._queue=[]}recognize(e,t={}){return this._delay(s=>{"string"==typeof t&&(t={lang:t}),t.lang=t.lang||"eng",s._send("recognize",{image:e,options:t,workerOptions:this.workerOptions})})}detect(e,t={}){return this._delay(s=>{s._send("detect",{image:e,options:t,workerOptions:this.workerOptions})})}terminate(){this.worker&&r.terminateWorker(this),this.worker=null,this._currentJob=null,this._queue=[]}_delay(e){this.worker||(this.worker=r.spawnWorker(this,this.workerOptions));var t=new o(this);return this._queue.push(s=>{this._queue.shift(),this._currentJob=t,e(t)}),this._currentJob||this._dequeue(),t}_dequeue(){this._currentJob=null,this._queue.length&&this._queue[0]()}_recv(e){"resolve"===e.status&&"recognize"===e.action&&(e.data=n(e.data)),this._currentJob.id===e.jobId?this._currentJob._handle(e):console.warn("Job ID "+e.jobId+" not known.")}}e.exports=a()},function(e,t,s){"use strict";s.r(t);var r=s(2),n=s.n(r),o=document.createElement("img");$("#imgInp").change(function(e){for(var t=0;t<e.originalEvent.srcElement.files.length;t++){var s=e.originalEvent.srcElement.files[t],r=new FileReader;r.onloadend=function(){r.result&&(o.src=r.result,console.log(r),a(r.result))},r.readAsDataURL(s),$("#imgp").append(o)}});var i=["../images/icon.png"];function a(e){i.push(e),n.a.recognize(e).then(function(e){console.log(e)})}},function(e,t){e.exports=function(e){return e.paragraphs=[],e.lines=[],e.words=[],e.symbols=[],e.blocks.forEach(function(t){t.page=e,t.lines=[],t.words=[],t.symbols=[],t.paragraphs.forEach(function(s){s.block=t,s.page=e,s.words=[],s.symbols=[],s.lines.forEach(function(r){r.paragraph=s,r.block=t,r.page=e,r.symbols=[],r.words.forEach(function(n){n.line=r,n.paragraph=s,n.block=t,n.page=e,n.symbols.forEach(function(o){o.word=n,o.line=r,o.paragraph=s,o.block=t,o.page=e,o.line.symbols.push(o),o.paragraph.symbols.push(o),o.block.symbols.push(o),o.page.symbols.push(o)}),n.paragraph.words.push(n),n.block.words.push(n),n.page.words.push(n)}),r.block.lines.push(r),r.page.lines.push(r)}),s.page.paragraphs.push(s)})}),e}},function(e,t,s){const r=s(0);let n=0;e.exports=class{constructor(e){this.id="Job-"+ ++n+"-"+Math.random().toString(16).slice(3,8),this._instance=e,this._resolve=[],this._reject=[],this._progress=[],this._finally=[]}then(e,t){return this._resolve.push?this._resolve.push(e):e(this._resolve),t&&this.catch(t),this}catch(e){return this._reject.push?this._reject.push(e):e(this._reject),this}progress(e){return this._progress.push(e),this}finally(e){return this._finally.push(e),this}_send(e,t){r.sendPacket(this._instance,{jobId:this.id,action:e,payload:t})}_handle(e){var t=e.data;let s=!1;"resolve"===e.status?(0===this._resolve.length&&console.log(t),this._resolve.forEach(e=>{var s=e(t);s&&"function"==typeof s.then&&console.warn("TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.")}),this._resolve=t,this._instance._dequeue(),s=!0):"reject"===e.status?(0===this._reject.length&&console.error(t),this._reject.forEach(e=>e(t)),this._reject=t,this._instance._dequeue(),s=!0):"progress"===e.status?this._progress.forEach(e=>e(t)):console.warn("Message type unknown",e.status),s&&this._finally.forEach(e=>e(t))}}}]);